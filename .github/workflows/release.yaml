name: Compile & Release WinUtil

on:
  workflow_dispatch: # Manual trigger added
    inputs:
      publish_as_stable:
        description: 'Publish as Stable Release'
        required: true
        default: false
        type: boolean

jobs:
  build-runspace:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Compile WinUtil
        id: compile_winutil
        run: |
          # Run 'Compile.ps1' Script and the script name for WinUtil will be 'winutil.ps1',
          # which's expected by the next steps in this Workflow
          Set-ExecutionPolicy Bypass -Scope Process -Force
          ./Compile.ps1
        continue-on-error: false # Directly fail the job on error, removing the need for a separate check

      - name: Extract Version from winutil.ps1
        id: extract_version
        run: |
          $version = ''
          Get-Content ./winutil.ps1 -TotalCount 30 | ForEach-Object {
            if ($_ -match 'Version\s*:\s*(\d{2}\.\d{2}\.\d{2})') {
              $version = $matches[1]
              echo "version=$version" >> $env:GITHUB_ENV
              break
            }
          }
          if (-not $version) {
            Write-Error "Version not found in winutil.ps1"
            exit 1
          }
        continue-on-error: false # Directly fail the job on error, removing the need for a separate check

      - name: Create Tag
        id: create_tag
        run: |
          $tagExists = git tag -l $env:VERSION
          if ($tagExists -eq "") {
            Write-Host "Making new tag, tag name: $env:VERSION"
            git tag $env:VERSION
            git push origin $env:VERSION
          } else {
            Write-Host "Tag $env:VERSION already exists, skipping tag creation"
          }

      - name: Create and Upload Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: "![GitHub Downloads (specific asset, specific tag)](https://img.shields.io/github/downloads/${{ github.repository }}/${{ env.VERSION }}/winutil.ps1)"
          append_body: true
          files: ./winutil.ps1
          prerelease: ${{ !(inputs.publish_as_stable == 'true') }}
          generate_release_notes: true
          make_latest: "${{ inputs.publish_as_stable == 'true' }}"
          # Note:
          #   inputs for workflow are weird, as their values are strings & powered by JavaScript under the hood,
          #   meaning if you use 'github.event.inputs.INPUT_NAME' or 'inputs.INPUT_NAME', it'll treat every input as a string,
          #   so for boolean paramters, always convert your boolean input parameter (which is a string) to an actual boolean value,
          #   by doing '${{ inputs.INPUT_NAME == 'true' }}', resource: https://github.com/actions/runner/issues/1483
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
